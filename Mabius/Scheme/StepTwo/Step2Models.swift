//
//  Step2Models.swift
//  Mabius
//
//  Created by Timafei Harhun on 2/24/17.
//  Copyright (c) 2017 vice3.agency. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so you can apply
//  clean architecture to your iOS and Mac projects, see http://clean-swift.com
//

enum ImageButton: Int {
    case logo = 0
    case first
    case second
    case third
}

struct Step2 {
    
    struct Input {
        var name: String?
        var address: String?
        var description: String?
        var location: Location?
        var logoId: Int?
        var imagesIds: [Int]
    }

    struct Output {
        var imageId: Int
    }
    
    struct Transfer {
        var step1: Step1.Input!
    }

    struct ViewModel {
        var location: Location? = nil
        var address = Address()
        var logoId: Int?
        var imagesIds: [Int: Int?] = [ImageButton.first.rawValue: nil, ImageButton.second.rawValue: nil, ImageButton.third.rawValue: nil]
    }
    
    struct Address {
        var country: String?
        var city: String?
        var address: String?
        var more: String?
    }
}

extension Step2.Input {
    var isValid: Bool {
        guard let name = name else { return false }
        guard let address = address else { return false }
        guard let description = description else { return false }
        guard location != nil else { return false }
        
        return name.length > zeroLength && address.length > zeroLength && description.length > zeroLength && !imagesIds.isEmpty
    }
}

let zeroLength = 0

extension Step2.ViewModel {
    func getImagesIds() -> [Int] {
        var ids = [Int]()
        
        let sortedKeys = imagesIds.keys.sorted()
        sortedKeys.forEach { key in
            if let value = imagesIds[key], value != nil {
                ids.append(value!)
            }
        }
        
        return ids
    }
}
