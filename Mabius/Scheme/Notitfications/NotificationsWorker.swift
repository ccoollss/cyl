//
//  NotificationsWorker.swift
//  Mabius
//
//  Created by Timafei Harhun on 3/13/17.
//  Copyright (c) 2017 vice3.agency. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so you can apply
//  clean architecture to your iOS and Mac projects, see http://clean-swift.com
//

protocol NotificationsWorkerInput {
    func loadNotifications(with input: Notifications.Input)
}

protocol NotificationsWorkerOutput: class {
    func didLoadNotifications(_ response: Notifications.Output)
    func didLoadMoreNotifications(_ response: Notifications.Output)
    func gotError(_ error: Error)
}

class NotificationsWorker {
    
    weak var output: NotificationsWorkerOutput!

    // MARK: - Business Logic

    func loadNotifications(with input: Notifications.Input) {
        _ = GetNotifications(page: input.page, perPage: input.perPage).exec().subscribe(onNext: { response in
            if input.page == 1 {
                self.output.didLoadNotifications(Notifications.Output(page: response.object.pagination.currentPage, total: response.object.pagination.total, notifications: response.object.notifications ?? [NotificationInfo]())) //FIXME: notifications should no be nil
            } else {
                self.output.didLoadMoreNotifications(Notifications.Output(page: response.object.pagination.currentPage, total: response.object.pagination.total, notifications: response.object.notifications ?? [NotificationInfo]()))
            }
        }, onError: { error in
            self.output.gotError(error)
        })
    }
}
