//
//  NotificationsInteractor.swift
//  Mabius
//
//  Created by Timafei Harhun on 3/13/17.
//  Copyright (c) 2017 vice3.agency. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so you can apply
//  clean architecture to your iOS and Mac projects, see http://clean-swift.com
//

protocol NotificationsInteractorInput {
    func loadNotifications(with input: Notifications.Input)
}

class NotificationsInteractor: NotificationsInteractorInput, NotificationsWorkerOutput {
    
    private let output: NotificationsPresenterInput
    private let worker: NotificationsWorker

    init(output: NotificationsPresenterInput) {
        self.output = output
        worker = NotificationsWorker()
        worker.output = self
    }

    // MARK: - Business logic

    func loadNotifications(with input: Notifications.Input) {
        output.beginLoad()
        worker.loadNotifications(with: input)
    }
    
    // MARK: - Worker Output
    
    func didLoadNotifications(_ response: Notifications.Output) {
        output.didLoadNotifications(response)
    }
    
    func didLoadMoreNotifications(_ response: Notifications.Output) {
        output.didLoadMoreNotifications(response)
    }
    
    func gotError(_ error: Error) {
        output.gotError(error)
    }
}
