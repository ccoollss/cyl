//
//  PointInteractor.swift
//  Mabius
//
//  Created by Timafei Harhun on 10/03/17.
//  Copyright (c) 2017 vice3.agency. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so you can apply
//  clean architecture to your iOS and Mac projects, see http://clean-swift.com
//

protocol PointInteractorInput {
    
    func loadPoint(with id: Int)
    func loadComments(with input: PointDetails.Input.CommentsList)
    
    func addComment(with input: PointDetails.Input.Comment)
    func like(for point: Point)
    func removeLike(for point: Point)
}

class PointInteractor: PointInteractorInput, PointWorkerOutput {
    
    private let output: PointPresenterInput
    private let worker: PointWorker

    init(output: PointPresenterInput) {
        self.output = output
        worker = PointWorker()
        worker.output = self
    }

    // MARK: - Business logic
    
    func loadPoint(with id: Int) {
        output.beginLoad()
        worker.loadPoint(with: id)
    }

    func loadComments(with input: PointDetails.Input.CommentsList) {
        output.beginLoad()
        worker.loadComments(with: input)
    }
    
    func addComment(with input: PointDetails.Input.Comment) {
        output.beginLoad()
        worker.addComment(with: input)
    }
    
    func like(for point: Point) {
        output.beginLoad()
        worker.like(for: point)
    }

    func removeLike(for point: Point) {
        output.beginLoad()
        worker.removeLike(for: point)
    }
    
    // MARK: - Worker Output

    func didLoadPoint(_ response: PointDetails.Output.UserPoint) {
        output.didLoadPoint(response)
    }
    
    func didLoadComments(_ response: PointDetails.Output.Comments) {
        output.didLoadComments(response)
    }
    
    func didLoadMoreComments(_ response: PointDetails.Output.Comments) {
        output.didLoadMoreComments(response)
    }
    
    func didAddComment() {
        output.didAddComment()
    }
    
    func didLike(for point: Point) {
        output.didLike(for: point)
    }
    
    func didRemoveLike(for  point: Point) {
        output.didRemoveLike(for: point)
    }
    
    func gotError(_ error: Error) {
        output.gotError(error)
    }
}
