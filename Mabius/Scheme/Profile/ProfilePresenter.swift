//
//  ProfilePresenter.swift
//  Mabius
//
//  Created by Timafei Harhun on 14/03/17.
//  Copyright (c) 2017 vice3.agency. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so you can apply
//  clean architecture to your iOS and Mac projects, see http://clean-swift.com
//

protocol ProfilePresenterInput {
    
    func beginLoad()
    
    func didLoadCreatedPoints(_ response: Profile.Output)
    func didLoadLikedPoints(_ response: Profile.Output)
    
    func didLike(for point: Point)
    func didRemoveLike(for  point: Point)
    
    func didLoadUser(_ user: User)
    
    func gotError(_ error: Error)
}

protocol ProfilePresenterOutput: class {
    
    func didLoadCreatedPoints(_ response: Profile.Output)
    func didLoadLikedPoints(_ response: Profile.Output)
    
    func didLike(for point: Point)
    func didRemoveLike(for  point: Point)
    
    func didLoadUser(_ user: User)
    
    func toggleView(_ isEnabled: Bool)
    
    func showError(_ error: String)
}

class ProfilePresenter: ProfilePresenterInput {
    
    private weak var output: ProfilePresenterOutput?

    init(output: ProfilePresenterOutput) {
        self.output = output
    }

    // MARK: - Presentation logic
    
    func beginLoad() {
        beginActivity()
    }
    
    func didLoadCreatedPoints(_ response: Profile.Output) {
        endActivity()
        output?.didLoadCreatedPoints(response)
    }
    
    func didLoadLikedPoints(_ response: Profile.Output) {
        endActivity()
        output?.didLoadLikedPoints(response)
    }
    
    func didLike(for point: Point) {
        endActivity()
        output?.didLike(for: point)
    }
    
    func didRemoveLike(for point: Point) {
        endActivity()
        output?.didRemoveLike(for: point)
    }
    
    func didLoadUser(_ user: User) {
        endActivity()
        output?.didLoadUser(user)
    }
    
    func gotError(_ error: Error) {
        endActivity()
        output?.showError(String(describing: error))
    }
    
    // MARK: - Activity

    fileprivate func beginActivity() {
        output?.toggleView(false)
    }
    
    fileprivate func endActivity() {
        output?.toggleView(true)
    }
}
