//
//  InviteInteractor.swift
//  Mabius
//
//  Created by Timafei Harhun on 15.02.17.
//  Copyright (c) 2017 vice3.agency. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so you can apply
//  clean architecture to your iOS and Mac projects, see http://clean-swift.com
//

protocol InviteInteractorInput
{
    func checkInput(_ input: Invite.Input.Data)
    func invite(with input: Invite.Input.Data)
}

class InviteInteractor: InviteInteractorInput, InviteWorkerOutput
{
    private let output: InvitePresenterInput
    private let worker: InviteWorker

    init(output: InvitePresenterInput) {
        self.output = output
        worker = InviteWorker()
        worker.output = self
    }

    // MARK: - Business logic
    
    func checkInput(_ input: Invite.Input.Data) {
        output.handleInput(input.isValid)
    }
    
    func invite(with input: Invite.Input.Data) {
        output.beginInvitation()
        worker.invite(with: input)
    }

    // MARK: - Worker Output
    
    func didInvited(with output: Invite.Output) {
        // Proceed next
        self.output.didInvited()
    }
    
    func gotError(_ error: Error) {
        output.gotError(error)
    }
}

