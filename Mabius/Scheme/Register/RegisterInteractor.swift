//
//  RegisterInteractor.swift
//  Mabius
//
//  Created by Timafei Harhun on 16.02.17.
//  Copyright (c) 2017 vice3.agency. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so you can apply
//  clean architecture to your iOS and Mac projects, see http://clean-swift.com
//
import SwiftyUserDefaults

protocol RegisterInteractorInput {
    
    func checkInput(_ input: Register.Input.Data)
    func checkInvite(_ invite: String?)
    func register(with input: Register.Input.Data)
    func addSocial(_ type: SocialType)
}

class RegisterInteractor: RegisterInteractorInput, RegisterWorkerOutput {
    
    private let output: RegisterPresenterInput
    private let worker: RegisterWorker

    init(output: RegisterPresenterInput) {
        self.output = output
        worker = RegisterWorker()
        worker.output = self
    }

    // MARK: - Business logic

    func checkInput(_ input: Register.Input.Data) {
         output.handleInput(input.isValid)
    }
    
    func checkInvite(_ invite: String?) {
        worker.checkInvite(invite)
    }
    
    func register(with input: Register.Input.Data) {
        output.beganRegister()
        worker.register(with: input)
    }
    
    func addSocial(_ type: SocialType) {
        worker.addSocial(type)
    }

    // MARK: - Worker Output
    
    func didCheckedInvite(_ isValid: Bool) {
        output.didCheckInvite(isValid)
    }
    
    func didAddSocial(_ type: SocialType, profile: SocialProfile) {
        output.didAddSocial(type, profile: profile)
    }
    
    func didRegister(with output: Register.Output) {
        worker.login(with: output)
    }

    func didLogin(with output: Register.Output) {
        // Save token
        Defaults[.token] = output.token
        if let email = output.email { Defaults[.email] = email }
        // Load user
        worker.getUser(output.user)
    }
    
    func gotUser(_ user: User) {
        // Save user
        Defaults[.userJSON] = user.toJSON()
        // Proceed next
        self.output.didRegister()
    }
    
    func gotError(_ error: Error) {
        output.gotError(error)
    }
}
