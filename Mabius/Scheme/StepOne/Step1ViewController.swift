//
//  StepOneViewController.swift
//  Mabius
//
//  Created by Timafei Harhun on 2/24/17.
//  Copyright (c) 2017 vice3.agency. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so you can apply
//  clean architecture to your iOS and Mac projects, see http://clean-swift.com
//

import UIKit

class Step1ViewController: BaseViewController, Step1PresenterOutput {
    
    @IBOutlet weak var typeView: UIView!
    @IBOutlet weak var ideaCheckmark: UIImageView!
    @IBOutlet weak var eventCheckmark: UIImageView!
    @IBOutlet weak var mabiusButton: RoundedButton!
    @IBOutlet weak var enactusButton: RoundedButton!
    @IBOutlet weak var ideaButton: CheckButton!
    @IBOutlet weak var eventButton: CheckButton!
    @IBOutlet weak var nextButton: Button!
    @IBOutlet weak var titleLabel: NavbarLabel!
    
    var point: Point?
    
    var input: Step1.Input {

        if mabiusButton.sel {
            return Step1.Input(selectedProject:.mabius, selectedType:.project)
        } else if enactusButton.sel {
            if ideaButton.isSelected {
                return Step1.Input(selectedProject:.enactus, selectedType:.idea)
            } else if eventButton.isSelected  {
                return Step1.Input(selectedProject:.enactus, selectedType:.event)
            }
        }

        return Step1.Input(selectedProject:nil, selectedType:nil)
    }
    
    var output: Step1InteractorInput!
    var router: Step1Router!

    // MARK: - Object lifecycle

    override func awakeFromNib(){
        super.awakeFromNib()
        
        Step1Configurator.instance.configure(viewController: self)
    }

    // MARK: - View lifecycle

    override func viewDidLoad() {
        super.viewDidLoad()
        
        output.checkInput(input)
        
        if point != nil {
            titleLabel.text = "UI.editPoint".localize()
            projectButtonHandler(mabiusButton)

            var project: Project?
            if let id = point?.project { project = ProjectsProvider.instance.getProject(by: id) }
            
            if let id = project?.id {
                if id == ProjectKind.mabius.rawValue { projectButtonHandler(mabiusButton) } else { projectButtonHandler(enactusButton) }
            }
            
            if let type = point?.type {
                if type == ProjectType.event.rawValue {
                    typeButtonHandler(eventButton)
                } else if type == ProjectType.idea.rawValue {
                    typeButtonHandler(ideaButton)
                }
            }
        }
    }
    
    // MARK: - Event handling

    @IBAction func projectButtonHandler(_ sender: RoundedButton) {
        self.enactusButton.sel = false
        self.mabiusButton.sel = false
        sender.sel = !sender.sel
        
        if mabiusButton.sel {
            typeView.isHidden = true
        } else {
            typeView.isHidden = false
        }
        
        output.checkInput(input)
    }
    
    @IBAction func typeButtonHandler(_ sender: UIButton) {
        eventButton.isSelected = false
        ideaButton.isSelected = false
        sender.isSelected = !sender.isSelected
        
        if ideaButton.isSelected {
            eventCheckmark.isHidden = true
            ideaCheckmark.isHidden = false
        } else {
            eventCheckmark.isHidden = false
            ideaCheckmark.isHidden = true
        }
        
        output.checkInput(input)
    }
    
    override func backButtonHandler(_ sender: AnyObject) {
        if point != nil {
            router.proceedBack()
        } else {
            router.proceedFeed()
        }
    }
    
    @IBAction func nextButtonHandler(_ sender: AnyObject) {
        router.proceedNext()
    }

    // MARK: - Display logic
    
    func toggleNextButton(_ isEnabled: Bool) {
        nextButton.isEnabled = isEnabled
    }
}
